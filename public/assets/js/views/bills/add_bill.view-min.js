function showItemSelectModal(){let t=$("#modal_select_bill_item");$("#btn_open_modal_add_item").on("click",function(){t.modal("show")})}function findItemById(t,e){for(let a=0;a<t.length;a++)if(t[a].id===e)return t[a];return null}function searchForItems(t,e){let a=$("#field_search_items");$("#btn_search_items").on("click",function(){let i=a.val().trim();$.get(`${getSiteUrl()}/items/search`,{keyword:i}).done(function(a){buildSearchResultsTableContent(a.data,t,e)}).fail(function(t){console.log(t.responseJSON.data)})})}function buildSearchResultsTableContent(t,e,a){e.rows().remove(),t.forEach(t=>{e.row.add([`<button class="btn btn-sm btn-primary btn_add_selected_item" data-id="${t.id}">Insert</button>`,t.item_name,t.description,t.category_name,t.gold_quality,t.weight,t.stock_price_string,t.quantity]).draw()}),addItemToTheBill(t,a)}function addItemToTheBill(t,e){$(".btn_add_selected_item").on("click",function(){let a=$(this).attr("data-id"),i=findItemById(t,a);null!=i&&(selectedItems.push(i),cleanToastContainer(),showSuccessToast(`${i.item_name} added successfully`),updateBillTable(e))})}function updateBillTable(t){function e(){let t=$(this).attr("data-id"),e=findItemById(selectedItems,t),a=$(`.field_item_quantity[data-id=${t}]`),i=$(`.field_item_price[data-id=${t}]`),l=$(`.field_subtotal[data-id=${t}]`),n=$("#btn_save_bill"),o=parseInt(a.val().toString()),s=parseFloat(i.val().toString());if(o>e.quantity||isNaN(o)||0===o)makeInputFieldInvalid(a),n.prop("disabled",!0),cleanToastContainer(),showWarningToast("Item quantity exceeded available quantity");else{makeInputFieldValid(a),n.prop("disabled",!1),cleanToastContainer();let e=o*s;l.val(e),chosenItems[t].quantity=o,chosenItems[t].price=s}}chosenItems={},t.rows().remove().draw(),selectedItems.forEach(e=>{t.row.add([e.item_name,`<input type="text" class="form-control form-control-sm text-right field_item_quantity" data-id="${e.id}" value="1">`,`<input type="text" class="form-control form-control-sm text-right field_item_price" data-id="${e.id}" placeholder="${e.stock_price}" value="${e.stock_price}">`,`<input type="text" class="form-control form-control-sm text-right field_subtotal" data-id="${e.id}" value="${e.stock_price}">`,`<button class="btn btn-sm btn-warning btn_remove_selected_item" data-id="${e.id}">Remove</button>`]).draw(),chosenItems[e.id]={id:e.id,quantity:e.quantity,price:e.stock_price}}),$(".btn_remove_selected_item").on("click",function(){let e=$(this).attr("data-id");selectedItems=selectedItems.filter(function(t){return t.id!==e}),cleanToastContainer(),showSuccessToast("Item removed"),updateBillTable(t)}),$(".field_item_quantity").on("keyup",e),$(".field_item_price").on("keyup",e)}function saveBill(){$("#btn_save_bill").on("click",function(){let t=$("#field_bill_date"),e=$("#field_customer_name"),a=$("#field_contact_number"),i=$("#field_address"),l=e.val().trim(),n=a.val().trim(),o=i.val().trim();cleanToastContainer(),resetInputFields($("#container_add_bill"));let s=!0;""===l&&(s=!1,makeInputFieldInvalid(e),showAlertToast("Invalid customer name")),""===n&&showInfoToast("Adding a contact number can be useful"),s&&$.post(`${getSiteUrl()}/bills/add-action`,{bill_date:t.val(),customer_name:l,contact_number:n,address:o,items:chosenItems}).done(function(t){console.log(t)}).fail(function(t){showAlertToast(t.responseJSON.data)})})}let selectedItems=[],chosenItems={};$(function(){let t=$("#dt_search_bill_items").DataTable({columnDefs:[{className:"text-right align-middle",targets:"_all"}],ordering:!0,order:[]}),e=$("#dt_bill_items").DataTable({columnDefs:[{className:"text-right align-middle",targets:"_all"}],ordering:!0,order:[]});showItemSelectModal(),searchForItems(t,e),saveBill()});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,